name: Deploy to GKE
description: Deploy Helm chart to a Kubernetes cluster on GKE
inputs:
  personal-access-token:
    description: Personal access token for Github account
    required: true
  helm-chart:
    description: Helm chart to deploy
    required: true
  image-tag:
    description: Image tag to deploy
    required: false
    default: ''
  github-ref:
    description: GitHub reference of the source repository
    required: true
    default: ''
  gke-sa-key:
    description: GKE Service Account Credential
    required: true
  alpha-cluster-namespace-regex:
    description: Regex to detect namespaces to deploy to alpha cluster
    required: true
    default: ^(perf|experimental)$
  beta-cluster-namespace-regex:
    description: Regex to detect namespaces to deploy to beta cluster
    required: true
    default: ^(staging|release)$
  pi-cluster-namespace-regex:
    description: Regex to detect namespaces to deploy to pi cluster
    required: true
    default: ^(production|demo|sandbox)$
  source-namespace:
    description: Namespace to pluck image tag from
    required: false
    default: ''
  target-namespace:
    description: Namespace to force deployment to
    required: false
    default: ''
  production-namespace:
    description: Name of production namespace
    required: true
    default: production
  production-branch-regex:
    description: Regex to detect production branch
    required: true
    default: ^(main|master)$
  staging-namespace:
    description: Name of staging namespace
    required: true
    default: staging
  staging-branch-regex:
    description: Regex to detect staging branch
    required: true
    default: ^(develop|staging)$
  disabled-namespace-regex:
    description: Regex to detect if deployment to a namespace is disabled
    required: true
    default: ^(demo)$
  helm-repository:
    description: Helm repository
    required: true
    default: two-inc/helm
  helm-release:
    description: Helm release
    required: true
    default: ''
  gke-zone:
    description: GKE zone
    required: true
    default: europe-north1
  slack-webhook:
    description: Slack webhook url
    required: true
  image-tag-key:
    description: which key will be replaced with the new tag
    default: '.image.tag'
runs:
  using: composite
  steps:
    -
      name: Clone helm repo
      uses: actions/checkout@master
      with:
        repository: ${{ inputs.helm-repository }}
        token: ${{ inputs.personal-access-token }}
        path: helm-charts
    -
      name: Read image tag from a source environment
      id: source-image-tag
      uses: mikefarah/yq@master
      if: inputs.source-namespace != ''
      with:
        cmd: yq eval '${{ inputs.image-tag-key }}' helm-charts/values/${{ inputs.helm-release }}/values-${{ inputs.source-namespace }}.yaml
    -
      name: Determine which cluster and namespace to deploy to
      shell: bash
      env:
        IMAGE_TAG: ${{ inputs.source-namespace != '' && steps.source-image-tag.outputs.result || inputs.image-tag }}
        HELM_RELEASE: ${{ inputs.helm-release == '' && inputs.helm-chart || inputs.helm-release }}  # TODO: remove ternary once deploy actions on repos are updated
        HELM_CHART: ${{ inputs.helm-chart == '' && inputs.helm-release || inputs.helm-chart }}
      run: |
        GITHUB_REF=${{ inputs.github-ref }}
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        echo "HELM_RELEASE=${HELM_RELEASE}" >> $GITHUB_ENV
        if echo "${HELM_RELEASE}" | grep -qE '^company-search'; then
            HELM_CHART="company-search"
        fi
        echo "HELM_CHART=${HELM_CHART}" >> $GITHUB_ENV
        DEPLOY_CONFIRM=true
        if [ "${{ inputs.target-namespace }}" != "" ]; then
            # Override GKE cluster and Kubernetes namespace
            NAMESPACE=${{ inputs.target-namespace }}
        else
            # Map branch name to GKE cluster and Kubernetes namespace
            NAMESPACE=${GITHUB_REF##*/}
            # Branches with special rules
            if echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.production-branch-regex }}'; then
                NAMESPACE=${{ inputs.production-namespace }}
            elif echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.staging-branch-regex }}'; then
                NAMESPACE=${{ inputs.staging-namespace }}
            fi
            # Do not deploy to disabled namespace
            if echo "$NAMESPACE" | grep -qE '${{ inputs.disabled-namespace-regex }}'; then
                DEPLOY_CONFIRM=false
                echo "Skipping, deploy to $NAMESPACE namespace is disabled via disble-namespace-regex argument."
            fi
        fi
        COMMIT_MESSAGE="Update ${NAMESPACE} ${HELM_RELEASE} with tag ${IMAGE_TAG}"
        if [ "${{ inputs.source-namespace }}" != "" ]; then
            COMMIT_MESSAGE="${COMMIT_MESSAGE} from ${{ inputs.source-namespace }}"
        fi
        if echo "$NAMESPACE" | grep -qE '${{ inputs.alpha-cluster-namespace-regex }}'; then
            GKE_CLUSTER=alpha
        elif echo "$NAMESPACE" | grep -qE '${{ inputs.beta-cluster-namespace-regex }}'; then
            GKE_CLUSTER=beta
        elif echo "$NAMESPACE" | grep -qE '${{ inputs.pi-cluster-namespace-regex }}'; then
            GKE_CLUSTER=pi
        else
            echo "Skipping, $NAMESPACE namespace is not mapped to any cluster."
            exit 1
        fi
        echo "DEPLOY_CONFIRM=$DEPLOY_CONFIRM to GKE_CLUSTER=$GKE_CLUSTER, NAMESPACE=$NAMESPACE"
        echo "GKE_CLUSTER=$GKE_CLUSTER" >> $GITHUB_ENV
        echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV
        echo "DEPLOY_CONFIRM=$DEPLOY_CONFIRM" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
    -
      name: Install Helm
      shell: bash
      if: env.DEPLOY_CONFIRM == 'true'
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    -
      name: Authenticate against GCP
      uses: google-github-actions/auth@v0.6.0
      if: env.DEPLOY_CONFIRM == 'true'
      with:
        credentials_json: ${{ inputs.gke-sa-key }}
    -
      name: Get gke credentials
      uses: google-github-actions/get-gke-credentials@v0.6.0
      if: env.DEPLOY_CONFIRM == 'true'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ inputs.gke-zone }}
    -
      name: Relax permission of values file
      run: chmod 777 helm-charts/values/${{ env.HELM_RELEASE }}/values-${{ env.NAMESPACE }}.yaml
      shell: bash
    -
      name: Replace version in helm values
      uses: mikefarah/yq@master
      if: env.DEPLOY_CONFIRM == 'true'
      with:
        cmd: yq eval -i '${{ inputs.image-tag-key }} = env(IMAGE_TAG)' helm-charts/values/${{ env.HELM_RELEASE }}/values-${{ env.NAMESPACE }}.yaml
    -
      name: Deploy helm chart
      id: deploy-chart
      if: env.DEPLOY_CONFIRM == 'true'
      shell: bash
      run: |
        cd helm-charts
        curl -L https://github.com/wercker/stern/releases/download/1.11.0/stern_linux_amd64 -o stern
        echo "e0b39dc26f3a0c7596b2408e4fb8da533352b76aaffdc18c7ad28c833c9eb7db stern" | sha256sum --check
        chmod +x stern
        helm history --max 1 ${{ env.HELM_RELEASE }} -n ${{ env.NAMESPACE }} -o yaml | grep 'status:' | grep -qv 'status: deployed' && helm rollback -n ${{ env.NAMESPACE }} ${{ env.HELM_RELEASE }} --wait
        (helm upgrade -i --create-namespace -n ${{ env.NAMESPACE }} --atomic ${{ env.HELM_RELEASE }} charts/${{ env.HELM_CHART }} -f values/${{ env.HELM_RELEASE }}/values-${{ env.NAMESPACE }}.yaml --debug && echo "DEPLOY_OUTCOME=success" >> $GITHUB_ENV || echo "DEPLOY_OUTCOME=failure" >> $GITHUB_ENV) &
        PID=$!
        ./stern --namespace ${{ env.NAMESPACE}} --selector app.kubernetes.io/instance=${{ env.HELM_RELEASE }} &
        wait ${PID}
    -
      name: Slack notification on failure
      uses: rtCamp/action-slack-notify@v2
      continue-on-error: true
      if: env.DEPLOY_CONFIRM == 'true' && env.DEPLOY_OUTCOME == 'failure'
      env:
        SLACK_TITLE: "Deploy of ${{ env.NAMESPACE }} ${{ env.HELM_RELEASE }} failed."
        SLACK_COLOR: ${{ env.DEPLOY_OUTCOME }}
        SLACK_WEBHOOK: ${{ inputs.slack-webhook }}
        SLACK_FOOTER: "Kubernetes cluster: ${{ env.GKE_CLUSTER }}"
    -
      name: Error status on failure
      shell: bash
      if: env.DEPLOY_CONFIRM == 'true' && env.DEPLOY_OUTCOME == 'failure'
      run: echo "See output of 'deploy-chart' step." && exit 1
    -
      name: Push new version to the helm repo
      shell: bash
      if: env.DEPLOY_CONFIRM == 'true' && env.DEPLOY_OUTCOME == 'success'
      run: |
        cd helm-charts
        git diff --exit-code && echo "INFO	Nothing to commit since existing image tag was deployed." || {
            git config user.name two-inc-bot
            git config user.email bot@two.inc
            git stash && git pull && git stash pop && git commit -am "${{ env.COMMIT_MESSAGE }}" && git push
        }
