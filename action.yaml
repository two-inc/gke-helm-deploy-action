name: Deploy to GKE
description: Deploy Helm chart to a Kubernetes cluster on GKE
inputs:
  helm-ssh-key:
    description: SSH key to clone Helm chart repo
    required: true
  helm-chart:
    description: Helm chart to deploy
    required: true
  image-tag:
    description: Image tag to deploy
    required: true
  github-ref:
    description: GitHub reference of the source repository
    required: true
    default: ''
  gke-sa-key:
    description: GKE Service Account Credential
    required: true
  production-cluster:
    description: Name of production cluster
    required: true
    default: tillit-k8s-cluster
  staging-cluster:
    description: Name of staging cluster
    required: true
    default: tillit-staging-k8s-cluster
  cluster-override:
    description: Cluster to override
    required: false
    default: ''
  namespace-override:
    description: Namespace to override
    required: false
    default: ''
  production-namespace:
    description: Name of production namespace
    required: true
    default: production
  production-branch-regex:
    description: Regex to detect production branch
    required: true
    default: ^(main|master)$
  staging-namespace:
    description: Name of staging namespace
    required: true
    default: staging
  staging-branch-regex:
    description: Regex to detect staging branch
    required: true
    default: ^(develop|staging)$
  experimental-namespace:
    description: Name of experimental namespace
    required: true
    default: experimental
  experimental-branch-regex:
    description: Regex to detect experimental branch
    required: true
    default: ^(experimental)$
  perf-namespace:
    description: Name of perf namespace
    required: true
    default: perf
  perf-branch-regex:
    description: Regex to detect perf branch
    required: true
    default: ^(perf)$
  disabled-namespace-regex:
    description: Regex to detect if deployment to a namespace is disabled
    required: true
    default: ^(sandbox)$
  helm-repository:
    description: Helm repository
    required: true
    default: tillit-dot-ai/helm
  helm-release:
    description: Helm release
    required: true
    default: ''
  gke-zone:
    description: GKE zone
    required: true
    default: europe-north1
  slack-webhook:
    description: Slack webhook url
    required: true
  image-tag-key:
    description: which key will be replaced with the new tag
    default: '.image.tag'
runs:
  using: composite
  steps:
    -
      name: Determine which cluster and namespace to deploy to
      shell: bash
      env:
        IMAGE_TAG: ${{ inputs.image-tag }}
        HELM_CHART: ${{ inputs.helm-chart }}
        HELM_RELEASE: ${{ inputs.helm-release == '' && inputs.helm-chart || inputs.helm-release }}
      run: |
        GITHUB_REF=${{ inputs.github-ref }}
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        echo "HELM_CHART=${HELM_CHART}" >> $GITHUB_ENV
        echo "HELM_RELEASE=${HELM_RELEASE}" >> $GITHUB_ENV
        CONFIRM_DEPLOY=true
        if [ "${{ inputs.cluster-override }}" != "" ] && [ "${{ inputs.namespace-override }}" != "" ]; then
            # Override GKE cluster and Kubernetes namespace
            GKE_CLUSTER=${{ inputs.cluster-override }}
            NAMESPACE=${{ inputs.namespace-override }}
        else
            # Map branch name to GKE cluster and Kubernetes namespace
            if echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.production-branch-regex }}'; then
                GKE_CLUSTER=${{ inputs.production-cluster }}
                NAMESPACE=${{ inputs.production-namespace }}
            elif echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.staging-branch-regex }}'; then
                GKE_CLUSTER=${{ inputs.staging-cluster }}
                NAMESPACE=${{ inputs.staging-namespace }}
            elif echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.experimental-branch-regex }}'; then
                GKE_CLUSTER=${{ inputs.staging-cluster }}
                NAMESPACE=${{ inputs.experimental-namespace }}
            elif echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.perf-branch-regex }}'; then
                GKE_CLUSTER=${{ inputs.staging-cluster }}
                NAMESPACE=${{ inputs.perf-namespace }}
            else
                echo "I do not know how to handle $GITHUB_REF branch."
                exit 1
            fi
            # Do not deploy to disabled namespace
            if echo "$NAMESPACE" | grep -qE '${{ inputs.disabled-namespace-regex }}'; then
                CONFIRM_DEPLOY=false
                echo "Skipping, deploy to $NAMESPACE namespace is disabled via disble-namespace-regex argument."
            fi
        fi
        echo "CONFIRM_DEPLOY=$CONFIRM_DEPLOY to GKE_CLUSTER=$GKE_CLUSTER, NAMESPACE=$NAMESPACE"
        echo "GKE_CLUSTER=$GKE_CLUSTER" >> $GITHUB_ENV
        echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV
        echo "CONFIRM_DEPLOY=$CONFIRM_DEPLOY" >> $GITHUB_ENV
    -
      name: Install Helm
      shell: bash
      if: env.CONFIRM_DEPLOY == 'true'
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    -
      name: Authenticate against GCP
      uses: google-github-actions/auth@v0.6.0
      if: env.CONFIRM_DEPLOY == 'true'
      with:
        credentials_json: ${{ inputs.gke-sa-key }}
    -
      name: Get gke credentials
      uses: google-github-actions/get-gke-credentials@v0.6.0
      if: env.CONFIRM_DEPLOY == 'true'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ inputs.gke-zone }}
    -
      name: Clone helm repo
      uses: actions/checkout@master
      if: env.CONFIRM_DEPLOY == 'true'
      with:
        repository: ${{ inputs.helm-repository }}
        token: ${{ inputs.helm-ssh-key }}
        path: helm-charts
    -
      name: Replace version in helm values
      uses: mikefarah/yq@master
      if: env.CONFIRM_DEPLOY == 'true'
      with:
        cmd: yq eval -i '${{ inputs.image-tag-key }} = env(IMAGE_TAG)' helm-charts/values/${{ env.HELM_RELEASE }}/values-${{ env.NAMESPACE }}.yaml
    -
      name: Deploy helm chart
      id: deploy-chart
      if: env.CONFIRM_DEPLOY == 'true'
      shell: bash
      run: >
        cd helm-charts;
        helm upgrade -i --create-namespace -n ${{ env.NAMESPACE }} --atomic ${{ env.HELM_RELEASE }} charts/${{ env.HELM_CHART }} -f values/${{ env.HELM_RELEASE }}/values-${{ env.NAMESPACE }}.yaml --debug
        && echo "DEPLOY_OUTCOME=success" >> $GITHUB_ENV
        || echo "DEPLOY_OUTCOME=failure" >> $GITHUB_ENV
    -
      name: Slack notification on failure
      uses: rtCamp/action-slack-notify@v2
      if: env.CONFIRM_DEPLOY == 'true' && env.DEPLOY_OUTCOME == 'failure'
      env:
        SLACK_TITLE: "Deploy of ${{ env.NAMESPACE }} ${{ env.HELM_RELEASE }} failed."
        SLACK_COLOR: ${{ env.DEPLOY_OUTCOME }}
        SLACK_WEBHOOK: ${{ inputs.slack-webhook }}
        SLACK_FOOTER: "Kubernetes cluster: ${{ env.GKE_CLUSTER }}"
    -
      name: Error status on failure
      shell: bash
      if: env.CONFIRM_DEPLOY == 'true' && env.DEPLOY_OUTCOME == 'failure'
      run: echo "See output of 'deploy-chart' step." && exit 1
    -
      name: Push new version to the helm repo
      shell: bash
      if: env.CONFIRM_DEPLOY == 'true' && env.DEPLOY_OUTCOME == 'success'
      run: |
        cd helm-charts
        git diff --exit-code && echo "INFO	Nothing to commit since existing image tag was deployed." || {
            git config user.name github-actions
            git config user.email github-actions@github.com
            git stash && git pull && git stash pop && git commit -am "Update ${{ env.NAMESPACE }} ${{ env.HELM_RELEASE }} with image tag ${{ env.IMAGE_TAG }}" && git push
        }
