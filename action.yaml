name: Deploy to GKE
description: Deploy Helm chart to a Kubernetes cluster on GKE
inputs:
  helm-ssh-key:
    description: SSH key to clone Helm chart repo
    required: true
  helm-chart:
    description: Helm chart to deploy
    required: true
  image-tag:
    description: Image tag to deploy
    required: true
  github-ref:
    description: GitHub reference of the source repository
    required: true
  gke-sa-key:
    description: GKE Service Account Credential
    required: true
  production-cluster:
    description: Name of production cluster
    required: true
    default: tillit-k8s-cluster
  staging-cluster:
    description: Name of staging cluster
    required: true
    default: tillit-staging-k8s-cluster
  production-namespace:
    description: Name of production namespace
    required: true
    default: production
  production-branch-regex:
    description: Regex to detect production branch
    required: true
    default: ^(main|master)$
  staging-namespace:
    description: Name of staging namespace
    required: true
    default: staging
  staging-branch-regex:
    description: Regex to detect staging branch
    required: true
    default: ^(develop|staging)$
  experimental-namespace:
    description: Name of experimental namespace
    required: true
    default: experimental
  experimental-branch-regex:
    description: Regex to detect experimental branch
    required: true
    default: ^(experimental)$
  perftest-namespace:
    description: Name of perftest namespace
    required: true
    default: perftest
  perftest-branch-regex:
    description: Regex to detect perftest branch
    required: true
    default: ^(perf)$
  helm-repository:
    description: Helm repository
    required: true
    default: tillit-dot-ai/tillit-helm
  helm-release:
    description: Helm release
    required: true
    default: ''
  gke-zone:
    description: GKE zone
    required: true
    default: europe-north1
  gke-project:
    description: GKE project name
    required: true
    default: tillit-api
runs:
  using: composite
  steps:
    -
      name: Install Helm
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    -
      name: Determine which cluster and namespace to deploy to
      shell: bash
      env:
        IMAGE_TAG: ${{ inputs.image-tag }}
        HELM_CHART: ${{ inputs.helm-chart }}
        HELM_RELEASE: ${{ inputs.helm-release == '' && inputs.helm-chart || inputs.helm-release }}
      run: |
        GITHUB_REF=${{ inputs.github-ref }}
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        echo "HELM_CHART=${HELM_CHART}" >> $GITHUB_ENV
        echo "HELM_RELEASE=${HELM_RELEASE}" >> $GITHUB_ENV
        if echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.production-branch-regex }}'; then
            echo "GKE_CLUSTER=${{ inputs.production-cluster }}" >> $GITHUB_ENV
            echo "NAMESPACE=${{ inputs.production-namespace }}" >> $GITHUB_ENV
        elif echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.staging-branch-regex }}'; then
            echo "GKE_CLUSTER=${{ inputs.staging-cluster }}" >> $GITHUB_ENV
            echo "NAMESPACE=${{ inputs.staging-namespace }}" >> $GITHUB_ENV
        elif echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.experimental-branch-regex }}'; then
            echo "GKE_CLUSTER=${{ inputs.staging-cluster }}" >> $GITHUB_ENV
            echo "NAMESPACE=${{ inputs.experimental-namespace }}" >> $GITHUB_ENV
        elif echo "${GITHUB_REF##*/}" | grep -qE '${{ inputs.perftest-branch-regex }}'; then
            echo "GKE_CLUSTER=${{ inputs.staging-cluster }}" >> $GITHUB_ENV
            echo "NAMESPACE=${{ inputs.perftest-namespace }}" >> $GITHUB_ENV
        fi
    -
      name: Setup gcloud cli
      uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ inputs.gke-sa-key }}
        project_id: ${{ inputs.gke-project }}
    -
      name: Setup gke credentials
      uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ inputs.gke-zone }}
        credentials: ${{ inputs.gke-sa-key }}
    -
      name: Clone helm repo
      uses: actions/checkout@master
      with:
        repository: ${{ inputs.helm-repository }}
        token: ${{ inputs.helm-ssh-key }}
        path: ./helm-charts
    -
      name: Replace version in helm values
      uses: mikefarah/yq@master
      with:
        cmd: yq eval -i '.image.tag = env(IMAGE_TAG)' helm-charts/values/${HELM_RELEASE}/values-${NAMESPACE}.yaml
    -
      name: Deploy helm chart
      shell: bash
      run: |
        cd helm-charts
        helm upgrade -i --create-namespace -n ${NAMESPACE} --atomic ${HELM_RELEASE} charts/${HELM_CHART} -f values/${HELM_RELEASE}/values-${NAMESPACE}.yaml
    -
      name: Push new version to the helm repo
      shell: bash
      run: |
        cd helm-charts
        git diff --exit-code && echo "INFO	Nothing to commit since existing image tag was deployed." || {
            git config user.name github-actions
            git config user.email github-actions@github.com
            git stash && git pull && git stash pop && git commit -am "Update ${NAMESPACE} ${HELM_RELEASE} with image tag ${IMAGE_TAG}" && git push
        }
