name: Deploy to GKE
description: Deploy Helm chart to a Kubernetes cluster on GKE
inputs:
  helm-ssh-key:
    description: SSH key to clone Helm chart repo
    required: true
  helm-chart:
    description: Helm chart to deploy
    required: true
  image-tag:
    description: Image tag to deploy
    required: true
  github-ref:
    description: GitHub reference of the source repository
    required: true
  gke-sa-key:
    description: GKE Service Account Credential
    required: true
  helm-repository:
    description: Helm repository
    required: true
    default: tillit-dot-ai/tillit-helm
  helm-release:
    description: Helm release
    required: true
    default: ''
  gke-zone:
    description: GKE zone
    required: true
    default: europe-north1
  gke-project:
    description: GKE project name
    required: true
    default: tillit-api
runs:
  using: composite
  steps:
    -
      name: Install Helm
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    -
      name: Determine which cluster and namespace to deploy to
      shell: bash
      env:
        HELM_RELEASE: ${{ inputs.helm-release == '' && inputs.helm-chart || inputs.helm-release }}
      run: |
        GITHUB_REF=${{ inputs.github-ref }}
        echo "HELM_RELEASE=${HELM_RELEASE}" >> $GITHUB_ENV
        if echo "${GITHUB_REF##*/}" | grep -qE '^(main|master)$'; then
            echo "GKE_CLUSTER=tillit-k8s-cluster" >> $GITHUB_ENV
            echo "NAMESPACE=production" >> $GITHUB_ENV
        elif echo "${GITHUB_REF##*/}" | grep -qE '^(staging|develop)$'; then
            echo "GKE_CLUSTER=tillit-staging-k8s-cluster" >> $GITHUB_ENV
            echo "NAMESPACE=staging" >> $GITHUB_ENV
        elif echo "${GITHUB_REF##*/}" | grep -qE '^(experimental)$'; then
            echo "GKE_CLUSTER=tillit-staging-k8s-cluster" >> $GITHUB_ENV
            echo "NAMESPACE=experimental" >> $GITHUB_ENV
        elif echo "${GITHUB_REF##*/}" | grep -qE '^(perf)$'; then
            echo "GKE_CLUSTER=tillit-staging-k8s-cluster" >> $GITHUB_ENV
            echo "NAMESPACE=perftest" >> $GITHUB_ENV
        fi
    -
      name: Setup gcloud cli
      uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ inputs.gke-sa-key }}
        project_id: ${{ inputs.gke-project }}
    -
      name: Setup gke credentials
      uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ inputs.gke-zone }}
        credentials: ${{ inputs.gke-sa-key }}
    -
      name: Clone helm repo
      uses: actions/checkout@master
      with:
        repository: ${{ inputs.helm-repository }}
        token: ${{ inputs.helm-ssh-key }}
        path: ./tillit-helm
    -
      name: Replace version in helm values
      uses: mikefarah/yq@master
      env:
        IMAGE_TAG: ${{ inputs.image-tag }}
      with:
        cmd: yq eval -i '.image.tag = env(IMAGE_TAG)' tillit-helm/values/${{ env.HELM_RELEASE }}/values-${{ env.NAMESPACE }}.yaml
    -
      name: Deploy helm chart
      shell: bash
      run: |
        cd tillit-helm
        helm upgrade -i --create-namespace -n ${{ env.NAMESPACE }} --atomic ${{ env.HELM_RELEASE }} charts/${{ inputs.helm-chart }} -f values/${{ env.HELM_RELEASE }}/values-${{ env.NAMESPACE }}.yaml
    -
      name: Push new version to the tillit-helm repo
      shell: bash
      run: |
        cd tillit-helm
        git config user.name github-actions
        git config user.email github-actions@github.com
        git stash && git pull && git stash pop && git commit -am "Update ${{ env.NAMESPACE }} ${{ env.HELM_RELEASE }} with image tag ${{ inputs.image-tag }}" && git push
